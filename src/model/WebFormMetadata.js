/**
 * Web Forms API version 1.1
 * The Web Forms API facilitates generating semantic HTML forms around everyday contracts. 
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: devcenter@docusign.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import WebFormComponentType from './WebFormComponentType';
import WebFormSource from './WebFormSource';
import WebFormUserInfo from './WebFormUserInfo';

/**
 * The WebFormMetadata model module.
 * @module model/WebFormMetadata
 * @version 1.1.0
 */
class WebFormMetadata {
    /**
     * Constructs a new <code>WebFormMetadata</code>.
     * Form metadata
     * @alias module:model/WebFormMetadata
     */
    constructor() { 
        
        WebFormMetadata.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>WebFormMetadata</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WebFormMetadata} obj Optional instance to populate.
     * @return {module:model/WebFormMetadata} The populated <code>WebFormMetadata</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WebFormMetadata();

            if (data.hasOwnProperty('source')) {
                obj['source'] = WebFormSource.constructFromObject(data['source']);
            }
            if (data.hasOwnProperty('owner')) {
                obj['owner'] = WebFormUserInfo.constructFromObject(data['owner']);
            }
            if (data.hasOwnProperty('sender')) {
                obj['sender'] = WebFormUserInfo.constructFromObject(data['sender']);
            }
            if (data.hasOwnProperty('lastModifiedBy')) {
                obj['lastModifiedBy'] = WebFormUserInfo.constructFromObject(data['lastModifiedBy']);
            }
            if (data.hasOwnProperty('formContentModifiedBy')) {
                obj['formContentModifiedBy'] = WebFormUserInfo.constructFromObject(data['formContentModifiedBy']);
            }
            if (data.hasOwnProperty('formPropertiesModifiedBy')) {
                obj['formPropertiesModifiedBy'] = WebFormUserInfo.constructFromObject(data['formPropertiesModifiedBy']);
            }
            if (data.hasOwnProperty('lastPublishedBy')) {
                obj['lastPublishedBy'] = WebFormUserInfo.constructFromObject(data['lastPublishedBy']);
            }
            if (data.hasOwnProperty('lastEnabledBy')) {
                obj['lastEnabledBy'] = WebFormUserInfo.constructFromObject(data['lastEnabledBy']);
            }
            if (data.hasOwnProperty('lastDisabledBy')) {
                obj['lastDisabledBy'] = WebFormUserInfo.constructFromObject(data['lastDisabledBy']);
            }
            if (data.hasOwnProperty('archivedDateTime')) {
                obj['archivedDateTime'] = ApiClient.convertToType(data['archivedDateTime'], 'Date');
            }
            if (data.hasOwnProperty('createdDateTime')) {
                obj['createdDateTime'] = ApiClient.convertToType(data['createdDateTime'], 'Date');
            }
            if (data.hasOwnProperty('lastModifiedDateTime')) {
                obj['lastModifiedDateTime'] = ApiClient.convertToType(data['lastModifiedDateTime'], 'Date');
            }
            if (data.hasOwnProperty('formContentModifiedDateTime')) {
                obj['formContentModifiedDateTime'] = ApiClient.convertToType(data['formContentModifiedDateTime'], 'Date');
            }
            if (data.hasOwnProperty('formPropertiesModifiedDateTime')) {
                obj['formPropertiesModifiedDateTime'] = ApiClient.convertToType(data['formPropertiesModifiedDateTime'], 'Date');
            }
            if (data.hasOwnProperty('lastPublishedDateTime')) {
                obj['lastPublishedDateTime'] = ApiClient.convertToType(data['lastPublishedDateTime'], 'Date');
            }
            if (data.hasOwnProperty('lastEnabledDateTime')) {
                obj['lastEnabledDateTime'] = ApiClient.convertToType(data['lastEnabledDateTime'], 'Date');
            }
            if (data.hasOwnProperty('lastDisabledDateTime')) {
                obj['lastDisabledDateTime'] = ApiClient.convertToType(data['lastDisabledDateTime'], 'Date');
            }
            if (data.hasOwnProperty('lastSenderConsentDateTime')) {
                obj['lastSenderConsentDateTime'] = ApiClient.convertToType(data['lastSenderConsentDateTime'], 'Date');
            }
            if (data.hasOwnProperty('publishedSlug')) {
                obj['publishedSlug'] = ApiClient.convertToType(data['publishedSlug'], 'String');
            }
            if (data.hasOwnProperty('publishedComponentNames')) {
                obj['publishedComponentNames'] = ApiClient.convertToType(data['publishedComponentNames'], {'String': WebFormComponentType});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WebFormMetadata</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WebFormMetadata</code>.
     */
    static validateJSON(data) {
        // validate the optional field `owner`
        if (data['owner']) { // data not null
          WebFormUserInfo.validateJSON(data['owner']);
        }
        // validate the optional field `sender`
        if (data['sender']) { // data not null
          WebFormUserInfo.validateJSON(data['sender']);
        }
        // validate the optional field `lastModifiedBy`
        if (data['lastModifiedBy']) { // data not null
          WebFormUserInfo.validateJSON(data['lastModifiedBy']);
        }
        // validate the optional field `formContentModifiedBy`
        if (data['formContentModifiedBy']) { // data not null
          WebFormUserInfo.validateJSON(data['formContentModifiedBy']);
        }
        // validate the optional field `formPropertiesModifiedBy`
        if (data['formPropertiesModifiedBy']) { // data not null
          WebFormUserInfo.validateJSON(data['formPropertiesModifiedBy']);
        }
        // validate the optional field `lastPublishedBy`
        if (data['lastPublishedBy']) { // data not null
          WebFormUserInfo.validateJSON(data['lastPublishedBy']);
        }
        // validate the optional field `lastEnabledBy`
        if (data['lastEnabledBy']) { // data not null
          WebFormUserInfo.validateJSON(data['lastEnabledBy']);
        }
        // validate the optional field `lastDisabledBy`
        if (data['lastDisabledBy']) { // data not null
          WebFormUserInfo.validateJSON(data['lastDisabledBy']);
        }
        // ensure the json data is a string
        if (data['publishedSlug'] && !(typeof data['publishedSlug'] === 'string' || data['publishedSlug'] instanceof String)) {
            throw new Error("Expected the field `publishedSlug` to be a primitive type in the JSON string but got " + data['publishedSlug']);
        }

        return true;
    }


}



/**
 * @member {module:model/WebFormSource} source
 */
WebFormMetadata.prototype['source'] = undefined;

/**
 * @member {module:model/WebFormUserInfo} owner
 */
WebFormMetadata.prototype['owner'] = undefined;

/**
 * @member {module:model/WebFormUserInfo} sender
 */
WebFormMetadata.prototype['sender'] = undefined;

/**
 * @member {module:model/WebFormUserInfo} lastModifiedBy
 */
WebFormMetadata.prototype['lastModifiedBy'] = undefined;

/**
 * @member {module:model/WebFormUserInfo} formContentModifiedBy
 */
WebFormMetadata.prototype['formContentModifiedBy'] = undefined;

/**
 * @member {module:model/WebFormUserInfo} formPropertiesModifiedBy
 */
WebFormMetadata.prototype['formPropertiesModifiedBy'] = undefined;

/**
 * @member {module:model/WebFormUserInfo} lastPublishedBy
 */
WebFormMetadata.prototype['lastPublishedBy'] = undefined;

/**
 * @member {module:model/WebFormUserInfo} lastEnabledBy
 */
WebFormMetadata.prototype['lastEnabledBy'] = undefined;

/**
 * @member {module:model/WebFormUserInfo} lastDisabledBy
 */
WebFormMetadata.prototype['lastDisabledBy'] = undefined;

/**
 * The last time the web form was archived
 * @member {Date} archivedDateTime
 */
WebFormMetadata.prototype['archivedDateTime'] = undefined;

/**
 * Track the time the web form was created
 * @member {Date} createdDateTime
 */
WebFormMetadata.prototype['createdDateTime'] = undefined;

/**
 * The last time anything was modified on the form
 * @member {Date} lastModifiedDateTime
 */
WebFormMetadata.prototype['lastModifiedDateTime'] = undefined;

/**
 * Track the last time web form content changed.
 * @member {Date} formContentModifiedDateTime
 */
WebFormMetadata.prototype['formContentModifiedDateTime'] = undefined;

/**
 * Track the last time the form properties changed.
 * @member {Date} formPropertiesModifiedDateTime
 */
WebFormMetadata.prototype['formPropertiesModifiedDateTime'] = undefined;

/**
 * Track the last time a draft version was published to active
 * @member {Date} lastPublishedDateTime
 */
WebFormMetadata.prototype['lastPublishedDateTime'] = undefined;

/**
 * Track the last time the form was enabled
 * @member {Date} lastEnabledDateTime
 */
WebFormMetadata.prototype['lastEnabledDateTime'] = undefined;

/**
 * Track the last time the form was disabled
 * @member {Date} lastDisabledDateTime
 */
WebFormMetadata.prototype['lastDisabledDateTime'] = undefined;

/**
 * Track the last time a user added their consent for the form.
 * @member {Date} lastSenderConsentDateTime
 */
WebFormMetadata.prototype['lastSenderConsentDateTime'] = undefined;

/**
 * The public friendly slug that is used to access the form from the player
 * @member {String} publishedSlug
 */
WebFormMetadata.prototype['publishedSlug'] = undefined;

/**
 * A dictionary containing the mapping of component names to their respective component types for all the published components.
 * @member {Object.<String, module:model/WebFormComponentType>} publishedComponentNames
 */
WebFormMetadata.prototype['publishedComponentNames'] = undefined;






export default WebFormMetadata;

