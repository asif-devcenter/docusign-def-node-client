/**
 * Web Forms API version 1.1
 * The Web Forms API facilitates generating semantic HTML forms around everyday contracts. 
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: devcenter@docusign.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TemplateProperties model module.
 * @module model/TemplateProperties
 * @version 1.1.0
 */
class TemplateProperties {
    /**
     * Constructs a new <code>TemplateProperties</code>.
     * Information about a DocuSign template that will be used to seed a web form.
     * @alias module:model/TemplateProperties
     */
    constructor() { 
        
        TemplateProperties.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TemplateProperties</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TemplateProperties} obj Optional instance to populate.
     * @return {module:model/TemplateProperties} The populated <code>TemplateProperties</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TemplateProperties();

            if (data.hasOwnProperty('originalTemplateId')) {
                obj['originalTemplateId'] = ApiClient.convertToType(data['originalTemplateId'], 'String');
            }
            if (data.hasOwnProperty('clonedTemplateId')) {
                obj['clonedTemplateId'] = ApiClient.convertToType(data['clonedTemplateId'], 'String');
            }
            if (data.hasOwnProperty('importedDateTime')) {
                obj['importedDateTime'] = ApiClient.convertToType(data['importedDateTime'], 'Date');
            }
            if (data.hasOwnProperty('recipientIds')) {
                obj['recipientIds'] = ApiClient.convertToType(data['recipientIds'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TemplateProperties</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TemplateProperties</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['originalTemplateId'] && !(typeof data['originalTemplateId'] === 'string' || data['originalTemplateId'] instanceof String)) {
            throw new Error("Expected the field `originalTemplateId` to be a primitive type in the JSON string but got " + data['originalTemplateId']);
        }
        // ensure the json data is a string
        if (data['clonedTemplateId'] && !(typeof data['clonedTemplateId'] === 'string' || data['clonedTemplateId'] instanceof String)) {
            throw new Error("Expected the field `clonedTemplateId` to be a primitive type in the JSON string but got " + data['clonedTemplateId']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['recipientIds'])) {
            throw new Error("Expected the field `recipientIds` to be an array in the JSON data but got " + data['recipientIds']);
        }

        return true;
    }


}



/**
 * @member {String} originalTemplateId
 */
TemplateProperties.prototype['originalTemplateId'] = undefined;

/**
 * @member {String} clonedTemplateId
 */
TemplateProperties.prototype['clonedTemplateId'] = undefined;

/**
 * Track the time of assignment of Template information to the Form.
 * @member {Date} importedDateTime
 */
TemplateProperties.prototype['importedDateTime'] = undefined;

/**
 * Track mapped recipients on Template.
 * @member {Array.<String>} recipientIds
 */
TemplateProperties.prototype['recipientIds'] = undefined;






export default TemplateProperties;

