/**
 * Web Forms API version 1.1
 * The Web Forms API facilitates generating semantic HTML forms around everyday contracts. 
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: devcenter@docusign.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import WebFormSummary from './WebFormSummary';

/**
 * The WebFormSummaryList model module.
 * @module model/WebFormSummaryList
 * @version 1.1.0
 */
class WebFormSummaryList {
    /**
     * Constructs a new <code>WebFormSummaryList</code>.
     * A list of web form summary items.
     * @alias module:model/WebFormSummaryList
     */
    constructor() { 
        
        WebFormSummaryList.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>WebFormSummaryList</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WebFormSummaryList} obj Optional instance to populate.
     * @return {module:model/WebFormSummaryList} The populated <code>WebFormSummaryList</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WebFormSummaryList();

            if (data.hasOwnProperty('items')) {
                obj['items'] = ApiClient.convertToType(data['items'], [WebFormSummary]);
            }
            if (data.hasOwnProperty('resultSetSize')) {
                obj['resultSetSize'] = ApiClient.convertToType(data['resultSetSize'], 'Number');
            }
            if (data.hasOwnProperty('totalSetSize')) {
                obj['totalSetSize'] = ApiClient.convertToType(data['totalSetSize'], 'Number');
            }
            if (data.hasOwnProperty('startPosition')) {
                obj['startPosition'] = ApiClient.convertToType(data['startPosition'], 'Number');
            }
            if (data.hasOwnProperty('endPosition')) {
                obj['endPosition'] = ApiClient.convertToType(data['endPosition'], 'Number');
            }
            if (data.hasOwnProperty('nextUrl')) {
                obj['nextUrl'] = ApiClient.convertToType(data['nextUrl'], 'String');
            }
            if (data.hasOwnProperty('previousUrl')) {
                obj['previousUrl'] = ApiClient.convertToType(data['previousUrl'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WebFormSummaryList</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WebFormSummaryList</code>.
     */
    static validateJSON(data) {
        if (data['items']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['items'])) {
                throw new Error("Expected the field `items` to be an array in the JSON data but got " + data['items']);
            }
            // validate the optional field `items` (array)
            for (const item of data['items']) {
                WebFormSummary.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['nextUrl'] && !(typeof data['nextUrl'] === 'string' || data['nextUrl'] instanceof String)) {
            throw new Error("Expected the field `nextUrl` to be a primitive type in the JSON string but got " + data['nextUrl']);
        }
        // ensure the json data is a string
        if (data['previousUrl'] && !(typeof data['previousUrl'] === 'string' || data['previousUrl'] instanceof String)) {
            throw new Error("Expected the field `previousUrl` to be a primitive type in the JSON string but got " + data['previousUrl']);
        }

        return true;
    }


}



/**
 * Array of web form items with each containing summary.
 * @member {Array.<module:model/WebFormSummary>} items
 */
WebFormSummaryList.prototype['items'] = undefined;

/**
 * Result set size for current page
 * @member {Number} resultSetSize
 */
WebFormSummaryList.prototype['resultSetSize'] = undefined;

/**
 * Total result set size
 * @member {Number} totalSetSize
 */
WebFormSummaryList.prototype['totalSetSize'] = undefined;

/**
 * Starting position of fields returned for the current page
 * @member {Number} startPosition
 */
WebFormSummaryList.prototype['startPosition'] = undefined;

/**
 * Ending position of fields returned for the current page
 * @member {Number} endPosition
 */
WebFormSummaryList.prototype['endPosition'] = undefined;

/**
 * Url for the next page of results
 * @member {String} nextUrl
 */
WebFormSummaryList.prototype['nextUrl'] = undefined;

/**
 * Url for the previous page of results
 * @member {String} previousUrl
 */
WebFormSummaryList.prototype['previousUrl'] = undefined;






export default WebFormSummaryList;

