/**
 * Web Forms API version 1.1
 * The Web Forms API facilitates generating semantic HTML forms around everyday contracts. 
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: devcenter@docusign.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import HttpError from '../model/HttpError';
import WebFormSummaryList from '../model/WebFormSummaryList';

/**
* FormManagement service.
* @module api/FormManagementApi
* @version 1.1.0
*/
export default class FormManagementApi {

    /**
    * Constructs a new FormManagementApi. 
    * @alias module:api/FormManagementApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the webFormListForms operation.
     * @callback module:api/FormManagementApi~webFormListFormsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WebFormSummaryList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List Forms
     * List all the forms for the active user that can be in an active or draft state
     * @param {String} accountId Account identifier in which the webform resides
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [userFilter = 'all')] Filter which forms are returned
     * @param {Boolean} [isStandalone] Is the form a standalone form
     * @param {Boolean} [isPublished] Has the form been published
     * @param {String} [sortBy] Sort result set in mentioned sort property:order. Default is lastModifiedDateTime:desc. Default sort is descending if not mentioned.
     * @param {String} [search] Search through form names
     * @param {String} [startPosition] Starting position for desired page of results.
     * @param {String} [count] Number of results to return per page.
     * @param {module:api/FormManagementApi~webFormListFormsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WebFormSummaryList}
     */
    webFormListForms(accountId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'accountId' is set
      if (accountId === undefined || accountId === null) {
        throw new Error("Missing the required parameter 'accountId' when calling webFormListForms");
      }

      let pathParams = {
        'account_id': accountId
      };
      let queryParams = {
        'user_filter': opts['userFilter'],
        'is_standalone': opts['isStandalone'],
        'is_published': opts['isPublished'],
        'sort_by': opts['sortBy'],
        'search': opts['search'],
        'start_position': opts['startPosition'],
        'count': opts['count']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['docusignAccessCode'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = WebFormSummaryList;
      return this.apiClient.callApi(
        '/accounts/{account_id}/forms', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
